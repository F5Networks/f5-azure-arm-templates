{
	"$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
	"contentVersion": "9.0.0.0",
	"parameters": {
		"builtInRoleType": {
			"allowedValues": [
				"Reader",
				"Contributor",
				"Owner",
				"UserAccessAdministrator"
			],
			"defaultValue": "Reader",
			"metadata": {
				"description": "Built-in role name used for role assignment."
			},
			"type": "string"
		},
		"customRolePermissions": {
			"defaultValue": [],
			"metadata": {
				"description": "Array of permissions for the custom roleDefinition"
			},
			"type": "array"
		},
		"customRoleAssignableScopes": {
			"defaultValue": [],
			"metadata": {
				"description": "Array of scopes assigned for the custom roleDefinition"
			},
			"type": "array"
		},
		"customRoleDescription": {
			"defaultValue": "",
			"metadata": {
				"description": "Detailed description of the role definition"
			},
			"type": "string"
		},
		"customRoleName": {
			"defaultValue": "",
			"metadata": {
				"description": "Friendly name of the role definition"
			},
			"type": "string"
		},
		"keyVaultName": {
			"defaultValue": "",
			"metadata": {
				"description": "KeyVault name. This is required for provisioning KeyVault"
			},
			"type": "string"
		},
		"keyVaultPermissionsKeys": {
			"defaultValue": [
				"get",
				"list"
			],
			"metadata": {
				"description": "Array of permissions allowed on KeyVault Secrets for role"
			},
			"type": "array"
		},
		"keyVaultPermissionsSecrets": {
			"defaultValue": [
				"get",
				"list"
			],
			"metadata": {
				"description": "Array of permissions allowed on KeyVault Secrets for role"
			},
			"type": "array"
		},
		"secretName": {
			"defaultValue": "",
			"metadata": {
				"description": "secret name. This is required for creating secret"
			},
			"type": "string"
		},
		"secretValue": {
			"defaultValue": "",
			"metadata": {
				"description": "secret value. This is required for creating secret"
			},
			"type": "securestring"
		},
		"userAssignedIdentityName": {
			"defaultValue": "",
			"metadata": {
				"description": "name for user assigned identity. This is required for creating Azure User Assigned Identity"
			},
			"type": "string"
		},
		"tagValues": {
			"defaultValue": {
				"application": "APP",
				"cost": "COST",
				"environment": "ENV",
				"group": "GROUP",
				"owner": "OWNER"
			},
			"metadata": {
				"description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
			},
			"type": "object"
		}
	},
	"variables": {
		"Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
		"Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
		"Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
		"UserAccessAdministrator": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
		"customRoleAssignScopes": "[if(empty(parameters('customRoleAssignableScopes')), createArray(resourceGroup().id), parameters('customRoleAssignableScopes'))]",
		"identityApiVersion": "2018-11-30",
		"keyVaultApiVersion": "2018-02-14",
		"keyVaultNameVariable": "[if(empty(parameters('keyVaultName')), concat(resourceGroup().name, '-keyvault'), parameters('keyVaultName'))]",
		"roleDefinitionApiVersion": "2018-07-01",
		"roleAssignmentsApiVersion": "2018-09-01-preview",
		"roleDefName": "[guid(resourceGroup().id, string(parameters('customRolePermissions')), string(parameters('customRoleName')))]",
		"secretNameVariable": "[if(or(empty(parameters('secretName')), empty(parameters('keyVaultName'))), concat(resourceGroup().name, '-secret', '/', 'secret'), concat(parameters('keyVaultName'), '/', parameters('secretName')))]",
		"tenantId": "[subscription().tenantId]",
		"userAssignedIdentityNameVariable": "[if(empty(parameters('userAssignedIdentityName')), concat(resourceGroup().name, '-identity'), parameters('userAssignedIdentityName'))]"
	},
	"resources": [
		{
			"apiVersion": "[variables('roleDefinitionApiVersion')]",
			"condition": "[and(not(empty(parameters('customRoleName'))), not(empty(parameters('customRoleDescription'))))]",
			"name": "[variables('roleDefName')]",
			"properties": {
				"assignableScopes": "[variables('customRoleAssignScopes')]",
				"description": "[parameters('customRoleDescription')]",
				"isCustom": true,
				"permissions": "[parameters('customRolePermissions')]",
				"roleName": "[parameters('customRoleName')]",
				"type": "customRole"
			},
			"type": "Microsoft.Authorization/roleDefinitions"
		},
		{
			"apiVersion": "[variables('identityApiVersion')]",
			"condition": "[not(empty(parameters('userAssignedIdentityName')))]",
			"location": "[resourceGroup().location]",
			"name": "[variables('userAssignedIdentityNameVariable')]",
			"tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
			"type": "Microsoft.ManagedIdentity/userAssignedIdentities"
		},
		{
			"apiVersion": "[variables('roleAssignmentsApiVersion')]",
			"condition": "[and(not(empty(parameters('customRoleName'))), and(not(empty(parameters('customRoleDescription'))), not(empty(parameters('userAssignedIdentityName')))))]",
			"dependsOn": [
				"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityNameVariable'))]",
				"[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefName'))]"
			],
			"name": "[guid(resourceGroup().id, 'roleId')]",
			"properties": {
				"principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityNameVariable')), '2018-11-30').principalId]",
				"roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions/', variables('roleDefName'))]",
				"scope": "[resourceGroup().id]",
				"principalType": "ServicePrincipal"
			},
			"type": "Microsoft.Authorization/roleAssignments"
		},
		{
			"apiVersion": "[variables('roleAssignmentsApiVersion')]",
			"condition": "[not(empty(parameters('userAssignedIdentityName')))]",
			"dependsOn": [
				"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityNameVariable'))]"
			],
			"name": "[guid(resourceGroup().id, 'builtInId')]",
			"properties": {
				"principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityNameVariable')), '2018-11-30').principalId]",
				"roleDefinitionId": "[variables(parameters('builtInRoleType'))]",
				"scope": "[resourceGroup().id]",
				"principalType": "ServicePrincipal"
			},
			"type": "Microsoft.Authorization/roleAssignments"
		},
		{
			"apiVersion": "[variables('keyVaultApiVersion')]",
			"condition": "[and(not(empty(parameters('keyVaultName'))), not(empty(parameters('userAssignedIdentityName'))))]",
			"dependsOn": [
				"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityNameVariable'))]"
			],
			"location": "[resourceGroup().location]",
			"name": "[variables('keyVaultNameVariable')]",
			"properties": {
				"accessPolicies": [
					{
						"objectId": "[if(empty(parameters('userAssignedIdentityName')), resourceGroup().id, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityNameVariable')), variables('identityApiVersion')).principalId)]",
						"permissions": {
							"keys": "[parameters('keyVaultPermissionsKeys')]",
							"secrets": "[parameters('keyVaultPermissionsSecrets')]"
						},
						"tenantId": "[variables('tenantId')]"
					}
				],
				"enabledForDeployment": true,
				"enabledForDiskEncryption": true,
				"enabledForTemplateDeployment": true,
				"networkAcls": {
					"bypass": "AzureServices",
					"defaultAction": "Allow"
				},
				"sku": {
					"family": "A",
					"name": "standard"
				},
				"tenantId": "[variables('tenantId')]"
			},
			"tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
			"type": "Microsoft.KeyVault/vaults"
		},
		{
			"apiVersion": "[variables('keyVaultApiVersion')]",
			"condition": "[and(not(empty(parameters('secretValue'))),not(empty(parameters('secretName'))))]",
			"dependsOn": [
				"[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultNameVariable'))]"
			],
			"location": "[resourceGroup().location]",
			"name": "[variables('secretNameVariable')]",
			"properties": {
				"value": "[parameters('secretValue')]"
			},
			"type": "Microsoft.KeyVault/vaults/secrets"
		}
	],
	"outputs": {
		"builtInRoleId": {
			"type": "string",
			"value": "[variables(parameters('builtInRoleType'))]"
		},
		"customRoleDefinitionId": {
			"condition": "[and(not(empty(parameters('customRoleName'))), not(empty(parameters('customRoleDescription'))))]",
			"type": "string",
			"value": "[resourceId(resourceGroup().name, 'Microsoft.Authorization/roleDefinitions/', variables('roleDefName'))]"
		},
		"keyVaultName": {
			"condition": "[not(empty(parameters('keyVaultName')))]",
			"type": "string",
			"value": "[variables('keyVaultNameVariable')]"
		},
		"secretName": {
			"condition": "[not(empty(parameters('secretName')))]",
			"type": "string",
			"value": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]"
		},
		"userAssignedIdentityId": {
			"condition": "[not(empty(parameters('userAssignedIdentityName')))]",
			"type": "string",
			"value": "[resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('userAssignedIdentityName'))]"
		}
	}
}