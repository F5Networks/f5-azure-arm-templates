{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "3.2.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
	"adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to login to the Virtual Machine."
      }
    },
    "dnsLabel": {
      "type": "string",
      "defaultValue": "REQUIRED",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
   "instanceName": {
      "type": "string",
      "defaultValue": "f52nic",
      "metadata": {
        "description": "Name of the VM"
      }
    },
    "instanceType": {
      "defaultValue": "Standard_D2_v2",
      "allowedValues": [
        "Standard_A4",
        "Standard_A9",
        "Standard_A11",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2"
      ],
      "metadata": {
        "description": "Size of the VM"
      },
      "type": "string"
    },
    "imageName": {
      "defaultValue": "Good",
      "allowedValues": [
        "Good",
        "Better",
        "Best"
      ],
      "metadata": {
        "description": "F5 SKU(IMAGE) to Deploy"
      },
      "type": "string"
    },
    "licenseKey1": {
      "type": "string",
      "defaultValue": "REQUIRED",
      "metadata": {
        "description": "The license token for the F5 Big IP(BYOL)"
      }
    },
    "webServer": {
      "defaultValue": "Both",
      "allowedValues": [
        "Linux",
        "Windows",
        "Both"
      ],
      "metadata": {
        "description": "Web Server(s) to be deployed behind F5"
      },
      "type": "string"
    },
    "vsPort": {
      "defaultValue": "80",
      "allowedValues": [
        "80",
        "443"
      ],
      "metadata": {
        "description": "Virtual Server Port to Use on F5 to connect to the web server(s)"
      },
      "type": "string"
    },
    "restrictedSrcAddress": {
      "type": "string",
      "defaultValue": "*",
      "metadata": {
        "description": "Restricts management access to a specific network or address. Enter a IP address or address range in CIDR notation, or asterisk for all sources."
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {
        "application": "APP",
        "environment": "ENV",
        "group": "GROUP",
        "owner": "OWNER",
        "cost": "COST"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "apiVersionLinked": "2015-01-01",
    "location": "[resourceGroup().location]",
    "f5CloudLibsTag": "v1.2.0",

    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sa2nic')]",
    "storageAccountType": "Standard_LRS",
    "dnsLabel": "[toLower(parameters('dnsLabel'))]",
    "instanceName": "[toLower(parameters('instanceName'))]",
    "imageNameToLower": "[toLower(parameters('imageName'))]",
    "skuToUse": "[concat('f5-bigip-virtual-edition-', variables('imageNameToLower'),'-byol')]",
    "availabilitySetName": "[concat(variables('instanceName'), '-availset')]",

    "nic1Name": "[concat(variables('instanceName'), '-mgmt1')]",
    "nic2Name": "[concat(variables('instanceName'), '-nic2')]",
    "defaultGw": "10.0.1.1",
    "vnetName": "[concat(variables('instanceName'), '-vnet')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Frontend",
    "subnet1Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet1Name'))]",
    "subnet1Prefix": "10.0.1.0/24",
    "subnet1PrivateAddress": "10.0.1.4",
    "subnet2Name": "Web",
    "subnet2Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet2Name'))]",
    "subnet2Prefix": "10.0.2.0/24",
    "subnet2PrivateAddress": "10.0.2.4",
    "publicIPAddressName": "[concat(variables('dnsLabel'), '-pip')]",
    "publicIPAddressType": "Static",
    "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-nsg'))]",


    "subnet2PrivateAddressWindows": "10.0.2.5",
    "subnet2PrivateAddressLinux": "10.0.2.6",
    "singleQuoteWeb": "'",
    "WebServerPort": "80",
    "Linux": "[concat('-d ', variables('instanceName'), ' -n ', variables('subnet2PrivateAddressLinux'), ' -h ', variables('WebServerPort'),  ' -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -v ', variables('subnet1PrivateAddress'), ' -c 8443', ' -s ', parameters('vsPort'))]",
    "Windows": "[concat('-d ', variables('instanceName'), ' -n ', variables('subnet2PrivateAddressWindows'), ' -h ', variables('WebServerPort'),  ' -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -v ', variables('subnet1PrivateAddress'), ' -c 8443', ' -s ', parameters('vsPort'))]",
    "Both": "[concat('-d ', variables('instanceName'), ' -n \"', variables('subnet2PrivateAddressLinux'), ',', variables('subnet2PrivateAddressWindows'), '\" -h ', variables('WebServerPort'), ' -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -v ', variables('subnet1PrivateAddress'), ' -c 8443', ' -s ', parameters('vsPort'))]",
    "commandArgsWeb": "[variables(parameters('webServer'))]",
    "80": "http://",
    "443": "https://",
    "httpType": "[variables(parameters('vsPort'))]",
    "gitHubLocation": "https://raw.githubusercontent.com/F5Networks/f5-azure-arm-templates/master/experimental/reference/standalone/2nic%2Bwebserver/",
    "webtemplatelink": "[concat(variables('gitHubLocation'),  'nested/',  parameters('webServer'),'WebServer.json')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('publicIPAddressName')]",
      "tags": {
        "displayName": "PublicIPAddress",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabel')]"
        },
        "idleTimeoutInMinutes": 30,
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('vnetName')]",
      "tags": {
        "displayName": "NetworkInterface",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('vnetId')]",
        "[variables('publicIPAddressId')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('dnsLabel'),'-nsg')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('nic1Name')]",
      "tags": {
        "displayName": "NetworkInterface",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        },
        "ipConfigurations": [
          {
            "name": "[concat(variables('instanceName'), '-ipconfig1')]",
            "properties": {
              "privateIPAddress": "[variables('subnet1PrivateAddress')]",
              "privateIPAllocationMethod": "Static",
              "PublicIpAddress": {
                "Id": "[variables('publicIPAddressId')]"
              },
              "subnet": {
                "id": "[variables('subnet1Id')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('vnetId')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('nic2Name')]",
      "tags": {
        "displayName": "NetworkInterface",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('instanceName'), '-ipconfig2')]",
            "properties": {
              "privateIPAddress": "[variables('subnet2PrivateAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet2Id')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[variables('location')]",
      "name": "[concat(variables('dnsLabel'), '-nsg')]",
      "tags": {
        "displayName": "NetworkSecurityGroup",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "mgmt_allow_8443",
            "properties": {
              "description": "",
              "priority": 101,
              "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8443",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "ssh_allow_22",
            "properties": {
              "description": "",
              "priority": 102,
              "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "traffic_allow_443",
            "properties": {
              "description": "",
              "priority": 103,
              "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "traffic_allow_80",
            "properties": {
              "description": "",
              "priority": 104,
              "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('availabilitySetName')]",
       "tags": {
        "displayName": "AvailabilitySet",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic2Name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('instanceName')]",
       "tags": {
        "displayName": "VirtualMachine",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
	  "plan": {
      	"name": "[variables('skuToUse')]",
        "publisher": "f5-networks",
        "product": "f5-big-ip"
      },
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[variables('instanceName')]",
          "adminUsername": "[parameters('adminUsername')]",
		      "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "f5-networks",
            "offer": "f5-big-ip",
            "sku": "[variables('skuToUse')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('instanceName'), '.vhd')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageAccountName')]",
       "tags": {
        "displayName": "StorageAccount",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('instanceName'),'/start')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('instanceName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "settings": {
          "fileUris": [
             "[concat('https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/', variables('f5CloudLibsTag'), '/scripts/azure/runScripts.js')]",
             "[concat('https://api.github.com/repos/F5Networks/f5-cloud-libs/tarball/', variables('f5CloudLibsTag'))]"
          ],
          "commandToExecute": "[concat('f5-rest-node ./runScripts.js --log-level debug --tag ', variables('f5CloudLibsTag'), ' --onboard \" --output /var/log/onboard.log --log-level debug --host ', variables('subnet1PrivateAddress'), ' -u admin -p ', parameters('adminPassword'), ' --hostname ', concat(variables('instanceName'), '.', resourceGroup().location, '.cloudapp.azure.com'), ' --port 443 --ssl-port 8443 --set-password admin:', parameters('adminPassword'), ' --license ', parameters('licenseKey1'), ' --ntp pool.ntp.org --db tmm.maxremoteloglength:2048 --module ltm:nominal --module afm:none --signal ONBOARD_DONE \"', ' --network \" --wait-for ONBOARD_DONE --output /var/log/network.log --host ', variables('subnet1PrivateAddress'), ' --port 8443 -u admin -p ', parameters('adminPassword'), ' --multi-nic --default-gw ', variables('defaultGw'), ' --vlan vlan_mgmt,1.0 --vlan vlan_1,1.1 --self-ip self_mgmt,', variables('subnet1PrivateAddress'), ',vlan_mgmt --self-ip self_1,', variables('subnet2PrivateAddress'), ',vlan_1 --log-level debug --background --force-reboot --signal NETWORK_DONE \" --script \" --wait-for NETWORK_DONE --output /var/log/runScript.log --log-level debug --background --url ', variables('gitHubLocation'), 'scripts/', 'deploy_iapp_http.sh --cl-args ', variables('singleQuoteWeb'), variables('commandArgsWeb'), variables('singleQuoteWeb'), '\"')]"
        }
      }
     },
    {
      "apiVersion": "[variables('apiVersionLinked')]",
      "name": "linkedTemplateWebServer",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
          "[variables('vnetId')]"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
            "uri": "[variables('webtemplatelink')]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "privateAddressWindows":{"value": "[variables('subnet2PrivateAddressWindows')]"},
            "privateAddressLinux":{"value": "[variables('subnet2PrivateAddressLinux')]"},
            "webSubnetId":{"value": "[variables('subnet2Id')]"},
            "adminUsername":{"value": "[parameters('adminUsername')]"},
            "adminPassword":{"value": "[parameters('adminPassword')]"},
            "dnsLabel":{"value": "[variables('dnsLabel')]"},
            "instanceType":{"value": "[parameters('instanceType')]"},
            "gitHubLocation":{"value": "[variables('gitHubLocation')]"}
        }
      }
    }
  ],
  "outputs": {
    "MGMT-URL": {
      "type": "string",
      "value": "[concat('https://', variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com:8443')]"
    },
    "WebServer-URL-Through-F5 ": {
      "type": "string",
      "value": "[concat(variables('httpType'), variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "FQDN-Windows-WebServer": {
      "type": "string",
      "value": "[reference('linkedTemplateWebServer').outputs.FQDNWindows.value]"
    },
    "FQDN-Linux-WebServer": {
      "type": "string",
      "value": "[reference('linkedTemplateWebServer').outputs.FQDNLinux.value]"
    }
  }
}
