{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "privateAddressWindows": {
      "type": "string"
    },
    "privateAddressLinux": {
      "type": "string"
    },
    "webSubnetId": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "dnsLabel": {
      "type": "string"
    },
    "instanceType": {
      "type": "string"
    },
    "gitHubLocation": {
      "type": "string"
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressType": "Static",
    "WebServerPort": "80",

    "WebServerNameWindows": "winweb01",
    "Nic1NameWindows": "[concat(variables('WebServerNameWindows'), '-nic1')]",
    "storageAccountNameWindows": "[concat(uniquestring(resourceGroup().id), variables('WebServerNameWindows'))]",
    "publicIPAddressNameWindows": "[concat(variables('WebServerNameWindows'), '-pip')]",
    "scriptFolderWindows": ".",
    "scriptFileNameWindows": "Init-Web.ps1",
    "scriptParametersWindows": "",

    "WebServerNameLinux": "linuxweb01",
    "Nic1NameLinux": "[concat(variables('WebServerNameLinux'), '-nic1')]",
    "storageAccountNameLinux": "[concat(uniquestring(resourceGroup().id), variables('WebServerNameLinux'))]",
    "publicIPAddressNameLinux": "[concat(variables('WebServerNameLinux'), '-pip')]",
    "scriptFolderLinux": ".",
    "scriptFileNameLinux": "init_web.sh",
    "scriptParametersLinux": ""
  },
  "resources": [
    {
    "name": "[variables('WebServerNameWindows')]",
    "type": "Microsoft.Compute/virtualMachines",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('Nic1NameWindows'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountNameWindows'))]"
    ],
    "properties": {
        "osProfile": {
            "computerName": "[variables('WebServerNameWindows')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
                "provisionVmAgent": "true"
            }
        },
        "hardwareProfile": {
            "vmSize": "[parameters('instanceType')]"
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2012-R2-Datacenter",
                "version": "latest"
            },
            "osDisk": {
                "name": "[concat(variables('WebServerNameWindows'), '-winosdisk')]",
                "vhd": {
                    "uri": "[concat(concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameWindows')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), variables('storageAccountNameWindows'), '.vhd')]"
                },
                "createOption": "fromImage"
            },
            "dataDisks": []
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('Nic1NameWindows'))]"
                }
            ]
        }
    },
    "resources": [
        {
            "type": "extensions",
            "name": "webinit",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('WebServerNameWindows'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('gitHubLocation'), 'scripts/', variables('scriptFileNameWindows'))]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolderWindows'), '/', variables('scriptFileNameWindows'), ' ', variables('scriptParametersWindows'))]"
                }
            }
        }
    ]
    },
    {
    "name": "[variables('storageAccountNameWindows')]",
    "type": "Microsoft.Storage/storageAccounts",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "properties": {
        "accountType": "[variables('storageAccountType')]"
    }
    },
    {
    "name": "[variables('Nic1NameWindows')]",
    "type": "Microsoft.Network/networkInterfaces",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIPAddressNameWindows'))]"
    ],
    "properties": {
        "ipConfigurations": [
            {
                "name": "[concat(variables('WebServerNameWindows'), '-ipconfig1')]",
                "properties": {
                    "subnet": {
                        "id": "[parameters('webSubnetId')]"
                    },
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[parameters('privateAddressWindows')]",
                    "publicIpAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIPAddressNameWindows'))]"
                    }
                }
            }
        ]
    }
    },
    {
    "name": "[variables('publicIPAddressNameWindows')]",
    "type": "Microsoft.Network/publicIpAddresses",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "properties": {
        "dnsSettings": {
            "domainNameLabel": "[concat(parameters('dnsLabel'), variables('WebServerNameWindows'))]"
        },
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
    }
    },
    {
    "name": "[variables('WebServerNameLinux')]",
    "type": "Microsoft.Compute/virtualMachines",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('Nic1NameLinux'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountNameLinux'))]"
    ],
    "properties": {
        "osProfile": {
            "computerName": "[variables('WebServerNameLinux')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
        },
        "hardwareProfile": {
            "vmSize": "[parameters('instanceType')]"
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04.0-LTS",
                "version": "latest"
            },
            "osDisk": {
                "name": "[concat(variables('WebServerNameLinux'), '-linuxosdisk')]",
                "vhd": {
                    "uri": "[concat(concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameLinux')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), variables('storageAccountNameLinux'), '.vhd')]"
                },
                "caching": "ReadWrite",
                "createOption": "fromImage"
            },
            "dataDisks": []
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('Nic1NameLinux'))]"
                }
            ]
        }
    }
  },
  {
    "name": "[concat(variables('WebServerNameLinux'),'/webinit')]",
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
    "[concat('Microsoft.Compute/virtualMachines/', variables('WebServerNameLinux'))]"
    ],
    "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "settings": {
            "fileUris": [
                "[concat(parameters('gitHubLocation'), 'scripts/', variables('scriptFileNameLinux'))]"
            ],
            "commandToExecute": "[concat(variables('scriptFolderLinux'), '/', variables('scriptFileNameLinux'), ' ', variables('scriptParametersLinux'))]"
        }
    }
  },
  {
    "name": "[variables('storageAccountNameLinux')]",
    "type": "Microsoft.Storage/storageAccounts",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "properties": {
        "accountType": "[variables('storageAccountType')]"
    }
  },
  {
    "name": "[variables('Nic1NameLinux')]",
    "type": "Microsoft.Network/networkInterfaces",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIPAddressNameLinux'))]"
    ],
    "properties": {
        "ipConfigurations": [
            {
                "name": "[concat(variables('WebServerNameLinux'), '-ipconfig1')]",
                "properties": {
                    "subnet": {
                        "id": "[parameters('webSubnetId')]"
                    },
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[parameters('privateAddressLinux')]",
                    "publicIpAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIPAddressNameLinux'))]"
                    }
                }
            }
        ]
    }
  },
  {
    "name": "[variables('publicIPAddressNameLinux')]",
    "type": "Microsoft.Network/publicIpAddresses",
    "apiVersion": "[variables('apiVersion')]",
    "location": "[resourceGroup().location]",
    "properties": {
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsLabel'), variables('WebServerNameLinux'))]"
        },
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
    }
  }
  ],
  "outputs": {
    "FQDNWindows": {
      "type": "string",
      "value": "[concat(parameters('dnsLabel'), variables('WebServerNameWindows'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "FQDNLinux": {
      "type": "string",
      "value": "[concat(parameters('dnsLabel'), variables('WebServerNameLinux'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    }
  }
}