{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "3.2.0.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Virtual Machine"
            },
            "type": "string"
        },
        "adminPassword": {
            "metadata": {
                "description": "Password to login to the Virtual Machine"
            },
            "type": "securestring"
        },
        "dnsLabel": {
            "defaultValue": "REQUIRED",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine"
            },
            "type": "string"
        },
        "dnsLabelPrefix": {
            "defaultValue": "REQUIRED",
            "metadata": {
                "description": "Unique DNS Name prefix for the Public IP(s) used to access the data plan for application traffic objects(Virtual Servers, etc...)"
            },
            "type": "string"
        },
        "instanceName": {
            "defaultValue": "f5vm01",
            "metadata": {
                "description": "Name of the VM"
            },
            "type": "string"
        },
        "instanceType": {
            "allowedValues": [
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F4",
                "Standard_F8"
            ],
            "defaultValue": "Standard_D3_v2",
            "metadata": {
                "description": "Size of the VM"
            },
            "type": "string"
        },
        "imageName": {
            "allowedValues": [
                "Good",
                "Better",
                "Best"
            ],
            "defaultValue": "Good",
            "metadata": {
                "description": "F5 SKU(IMAGE) to Deploy"
            },
            "type": "string"
        },
        "bigIpVersion": {
            "allowedValues": [
                "latest",
                "13.0.021",
                "12.1.24"
            ],
            "defaultValue": "13.0.021",
            "metadata": {
                "description": "F5 BIG-IP Version to use"
            },
            "type": "string"
        },
        "licensedBandwidth": {
            "allowedValues": [
                "25m",
                "200m",
                "1g"
            ],
            "defaultValue": "200m",
            "metadata": {
                "description": "PAYG licensed bandwidth(Mbps) image to deploy"
            },
            "type": "string"
        },
        "numberOfExternalIps": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "defaultValue": 1,
            "metadata": {
                "description": "The number of public/private IP's to deploy for the application traffic(external) nic on the BIG-IP to be used for virtual servers."
            },
            "type": "int"
        },
        "vnetAddressPrefix": {
            "defaultValue": "10.0",
            "metadata": {
                "description": "The start of the CIDR block used by the BIG-IP's when create the Vnet and subnets.  What is supplied MUST be just the first two octets of the /16 virtual network that will be created.  Such as '10.0' or 192.168', etc..."
            },
            "type": "string"
        },

"webServer": {
    "defaultValue": "Both",
    "allowedValues": [
    "Linux",
    "Windows",
    "Both"
    ],
    "metadata": {
    "description": "Web Server(s) to be deployed behind F5"
    },
    "type": "string"
},
"vsPort": {
    "defaultValue": "80",
    "allowedValues": [
    "80",
    "443"
    ],
    "metadata": {
    "description": "Virtual Server Port to Use on F5 to connect to the web server(s)"
    },
    "type": "string"
},

        "restrictedSrcAddress": {
            "defaultValue": "*",
            "metadata": {
                "description": "Restricts management access to a specific network or address. Enter a IP address or address range in CIDR notation, or asterisk for all sources"
            },
            "type": "string"
        },
        "tagValues": {
            "defaultValue": {
                "application": "APP",
                "cost": "COST",
                "environment": "ENV",
                "group": "GROUP",
                "owner": "OWNER"
            },
            "type": "object"
        }
    },
    "variables": {
        "bigIpNicPortMap": {
            "1": {
                "Port": "[parameters('bigIpVersion')]"
            },
            "2": {
                "Port": "443"
            },
            "3": {
                "Port": "443"
            },
            "4": {
                "Port": "443"
            },
            "5": {
                "Port": "443"
            },
            "6": {
                "Port": "443"
            }
        },
        "bigIpVersionPortMap": {
            "12.1.24": {
                "Port": 443
            },
            "13.0.021": {
                "Port": 8443
            },
            "443": {
                "Port": 443
            },
            "latest": {
                "Port": 8443
            }
        },
        "apiVersion": "2015-06-15",
        "computeApiVersion": "2015-06-15",
        "networkApiVersion": "2015-06-15",
        "storageApiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "singleQuote": "'",
        "f5CloudLibsTag": "v2.3.0",
        "verifyHash": "[concat(variables('singleQuote'), 'cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 489d460d2e5fcd401ce12f19b1d753a6bee30483cd0bf2b7548b7f8fe3caf5b727af96f013733cbd08b0c109e0cf535a29288d473b84cc834369204d5be5edc9\n            set hashes(f5-cloud-libs-aws.tar.gz) 0b602d069a6647e8268c7afc5201259058c4df545cdee5212bf1f6c2d24b11421201282c11e047b1df9b144a012312de45a07fcf28bd0d8cd3d3a86698774925\n            set hashes(f5-cloud-libs-azure.tar.gz) 16d2ce2086883ed5b47a3ba4e79541fd1a4bb64513222cf3a459297c2474d0bfc71a161ba2b8571707e1a6b273badaaf2c847993d0e60a4b52cd8c62cb03aba6\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 4db3176b45913a5e7ccf42ab9c7ac9d7de115cdbd030b9e735946f92456b6eb433087ed0e98ac4981c76d475cd38f4de49cd98c063e13d50328a270e5b3daa4a\n            set hashes(f5.policy_creator.tmpl) 54d265e0a573d3ae99864adf4e054b293644e48a54de1e19e8a6826aa32ab03bd04c7255fd9c980c3673e9cd326b0ced513665a91367add1866875e5ef3c4e3a\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature prKQi8FeX98kCcFaMwIdwgYADdAjZo6iNTnnckguwe5IVysTEVe4vR2HPLJlDzU25dU17sQvDNIX52K0VYN4LEkAuSMeMTmr2LnlRWcGEJ4YUo9lKMdKzMzJaznlScwaR4P5mEdJC0ygq8jinOIlkauLbqmAElNtxWpb+XLnR2R83vMl/y9/LGxCxrvqE3ZuXvyuKqpAlhS+AN5ZQBDFvlTgQi52KJWpw+3i7oalz5dsjbAs2gRARtZ57Pa8OD5Oz54Q1UDxuzPVNH+CY4vt93JKmduMBsT3F41RUFDmRzosjmBY/Ic9O7oLVlKwOusDeqqqlfOM5CxcVMXwB3oxxQ==\n    signing-key /Common/f5-irule\n}', variables('singleQuote'))]",
        "installCloudLibs": "[concat(variables('singleQuote'), '#!/bin/bash\necho about to execute\nchecks=0\nwhile [ $checks -lt 120 ]; do echo checking mcpd\n/usr/bin/tmsh -a show sys mcp-state field-fmt | grep -q running\nif [ $? == 0 ]; then\necho mcpd ready\nbreak\nfi\necho mcpd not ready yet\nlet checks=checks+1\nsleep 1\ndone\necho loading verifyHash script\n/usr/bin/tmsh load sys config merge file /config/verifyHash\nif [ $? != 0 ]; then\necho cannot validate signature of /config/verifyHash\nexit\nfi\necho loaded verifyHash\necho verifying f5-cloud-libs.tar.gz\n/usr/bin/tmsh run cli script verifyHash /config/cloud/f5-cloud-libs.tar.gz\nif [ $? != 0 ]; then\necho f5-cloud-libs.tar.gz is not valid\nexit\nfi\necho verified f5-cloud-libs.tar.gz\necho expanding f5-cloud-libs.tar.gz\ntar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud\ntouch /config/cloud/cloudLibsReady', variables('singleQuote'))]",
        "newStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'stor')]",
        "storageAccountType": "Standard_LRS",
        "dnsLabel": "[toLower(parameters('dnsLabel'))]",
        "imageNameToLower": "[toLower(parameters('imageName'))]",
        "skuToUse": "[concat('f5-bigip-virtual-edition-', parameters('licensedBandwidth'), '-', variables('imageNameToLower'),'-hourly')]",
        "offerToUse": "f5-big-ip-hourly",
        "bigIpNicPortValue": "[variables('bigIpNicPortMap')['3'].Port]",
        "bigIpMgmtPort": "[variables('bigIpVersionPortMap')[variables('bigIpNicPortValue')].Port]",
        "availabilitySetName": "[concat(variables('dnsLabel'), '-avset')]",
        "nicName": "[concat(variables('dnsLabel'), '-mgmt0')]",
        "defaultGw": "[concat(parameters('vnetAddressPrefix'),'.2.1')]",
        "virtualNetworkName": "[concat(variables('dnsLabel'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "vnetAddressPrefix": "[concat(parameters('vnetAddressPrefix'),'.0.0/16')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-nsg'))]",
        "publicIPAddressName": "[concat(variables('dnsLabel'), '-mgmt-pip')]",
        "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "publicIPAddressType": "Static",
        "subnetName": "[concat(variables('dnsLabel'),'-subnet')]",
        "subnetId": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "subnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.1.0/24')]",
        "subnetPrivateAddress": "[concat(parameters('vnetAddressPrefix'), '.1.4')]",
        "instanceName": "[toLower(parameters('instanceName'))]",
        "dnsLabelPrefix": "[toLower(parameters('dnsLabelPrefix'))]",
        "nsg2ID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-nsg2'))]",
        "publicIPAddressNamePrefix": "[concat(variables('dnsLabel'), '-ext-pip')]",
        "publicIPAddressIdPrefix": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNamePrefix'))]",
        "extNicName": "[concat(variables('dnsLabel'), '-ext0')]",
        "extSubnetName": "[concat(variables('dnsLabel'),'-subnet2')]",
        "extSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('extsubnetName'))]",
        "extSubnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.2.0/24')]",
        "extSubnetPrivateAdress": "[concat(parameters('vnetAddressPrefix'), '.2.4')]",
        "extSubnetPrivateAdressPrefix": "[concat(parameters('vnetAddressPrefix'), '.2.')]",
        "intNicName": "[concat(variables('dnsLabel'), '-int0')]",
        "intSubnetName": "[concat(variables('dnsLabel'),'-subnet3')]",
        "intSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('intsubnetName'))]",
        "intSubnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.3.0/24')]",
        "intSubnetPrivateAdress": "[concat(parameters('vnetAddressPrefix'), '.3.4')]",
        "numberOfExternalIps": "[add(parameters('numberOfExternalIps'), 1)]",


"apiVersionLinked": "2015-01-01",
"extSubnetPrivateAdressVip": "[concat(parameters('vnetAddressPrefix'), '.2.5')]",
"dnsLabelVip": "[concat(variables('dnsLabelPrefix'), '2')]",
"intPrivateAddressWindows": "[concat(parameters('vnetAddressPrefix'), '.3.100')]",
"intPrivateAddressLinux": "[concat(parameters('vnetAddressPrefix'), '.3.101')]",
"singleQuoteWeb": "'",
"WebServerPort": "80",
"Linux": "[concat('-d ', variables('instanceName'), ' -n ', variables('intPrivateAddressLinux'), ' -h ', variables('WebServerPort'),  ' -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -v ', variables('extSubnetPrivateAdressVip'), ' -c ', variables('bigIpMgmtPort'), ' -s ', parameters('vsPort'))]",
"Windows": "[concat('-d ', variables('instanceName'), ' -n ', variables('intPrivateAddressWindows'), ' -h ', variables('WebServerPort'),  ' -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -v ', variables('extSubnetPrivateAdressVip'), ' -c ', variables('bigIpMgmtPort'), ' -s ', parameters('vsPort'))]",
"Both": "[concat('-d ', variables('instanceName'), ' -n \"', variables('intPrivateAddressLinux'), ',', variables('intPrivateAddressWindows'), '\" -h ', variables('WebServerPort'), ' -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -v ', variables('extSubnetPrivateAdressVip'), ' -c ', variables('bigIpMgmtPort'), ' -s ', parameters('vsPort'))]",
"commandArgsWeb": "[variables(parameters('webServer'))]",
"80": "http://",
"443": "https://",
"httpType": "[variables(parameters('vsPort'))]",
"gitHubLocation": "https://raw.githubusercontent.com/F5Networks/f5-azure-arm-templates/v3.2.0.0/experimental/reference/standalone/3nic%2Bwebserver/",
"webtemplatelink": "[concat(variables('gitHubLocation'),  'nested/',  parameters('webServer'),'WebServer.json')]",


        "ipconfigArray": [
            {
                "name": "[concat(variables('instanceName'), '-ipconfig1')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 2)]"
                    },
                    "primary": true,
                    "privateIPAddress": "[variables('extSubnetPrivateAdress')]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig2')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 3)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAdressPrefix'), 5)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig3')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 4)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAdressPrefix'), 6)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig4')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 5)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAdressPrefix'), 7)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig5')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 6)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAdressPrefix'), 8)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig6')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 7)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAdressPrefix'), 9)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig7')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 8)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAdressPrefix'), 10)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            },
            {
                "name": "[concat(variables('instanceName'), '-ipconfig8')]",
                "properties": {
                    "PublicIpAddress": {
                        "Id": "[concat(variables('publicIPAddressIdPrefix'), 9)]"
                    },
                    "primary": false,
                    "privateIPAddress": "[concat(variables('extSubnetPrivateAdressPrefix'), 11)]",
                    "privateIPAllocationMethod": "Static",
                    "subnet": {
                        "id": "[variables('extSubnetId')]"
                    }
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('publicIPAddressName')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabel')]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "copy": {
                "count": "[variables('numberOfExternalIps')]",
                "name": "pipcopy"
            },
            "location": "[variables('location')]",
            "name": "[concat(variables('publicIPAddressNamePrefix'), copyIndex(2))]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsLabelPrefix'), copyIndex(1))]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('virtualNetworkName')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('extSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('extSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('intSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('intSubnetPrefix')]"
                        }
                    }
                ]
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/virtualNetworks"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[variables('publicIPAddressId')]",
                "[variables('nsgID')]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('nicName')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('instanceName'), '-ipconfig1')]",
                        "properties": {
                            "PublicIpAddress": {
                                "Id": "[variables('publicIPAddressId')]"
                            },
                            "privateIPAddress": "[variables('subnetPrivateAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[concat(variables('nsg2ID'))]",
                "pipcopy"
            ],
            "location": "[variables('location')]",
            "name": "[variables('extNicName')]",
            "properties": {
                "ipConfigurations": "[take(variables('ipconfigArray'),variables('numberofExternalIps'))]",
                "networkSecurityGroup": {
                    "id": "[concat(variables('nsg2ID'))]"
                }
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[variables('vnetId')]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('intNicName')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('instanceName'), '-ipconfig1')]",
                        "properties": {
                            "privateIPAddress": "[variables('intSubnetPrivateAdress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('intSubnetId')]"
                            }
                        }
                    }
                ]
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[concat(variables('dnsLabel'), '-nsg')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "mgmt_allow_https",
                        "properties": {
                            "access": "Allow",
                            "description": "",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('bigIpMgmtPort')]",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "TCP",
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "ssh_allow_22",
                        "properties": {
                            "access": "Allow",
                            "description": "",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "direction": "Inbound",
                            "priority": 102,
                            "protocol": "TCP",
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[concat(variables('dnsLabel'), '-nsg2')]",
            "properties": {
                "securityRules": [
{
"name": "traffic_allow_443",
"properties": {
    "description": "",
    "priority": 103,
    "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
    "sourcePortRange": "*",
    "destinationAddressPrefix": "*",
    "destinationPortRange": "443",
    "protocol": "TCP",
    "direction": "Inbound",
    "access": "Allow"
}
},
{
"name": "traffic_allow_80",
"properties": {
    "description": "",
    "priority": 104,
    "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
    "sourcePortRange": "*",
    "destinationAddressPrefix": "*",
    "destinationPortRange": "80",
    "protocol": "TCP",
    "direction": "Inbound",
    "access": "Allow"
}
}
                ]
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('availabilitySetName')]",
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('newStorageAccountName')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('extNicName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('intNicName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('instanceName')]",
            "plan": {
                "name": "[variables('skuToUse')]",
                "product": "[variables('offerToUse')]",
                "publisher": "f5-networks"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net')]"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('extNicName'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('intNicName'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": {
                    "adminPassword": "[parameters('adminPassword')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "computerName": "[variables('instanceName')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[variables('offerToUse')]",
                        "publisher": "f5-networks",
                        "sku": "[variables('skuToUse')]",
                        "version": "[parameters('bigIpVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'), '.blob.core.windows.net/vhds/', variables('instanceName'), '.vhd')]"
                        }
                    }
                }
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "2016-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('instanceName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('instanceName'),'/start')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat('mkdir /config/cloud && cp f5-cloud-libs.tar.gz* /config/cloud; /usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; /usr/bin/install -b -m 400 /dev/null /config/cloud/passwd; IFS=', variables('singleQuote'), '%', variables('singleQuote'), '; echo -e ', variables('verifyHash'), ' >> /config/verifyHash; echo -e ', variables('installCloudLibs'), ' >> /config/installCloudLibs.sh; echo ', variables('singleQuote'), parameters('adminPassword'), variables('singleQuote'), ' >> /config/cloud/passwd; unset IFS; bash /config/installCloudLibs.sh; /usr/bin/f5-rest-node /config/cloud/f5-cloud-libs/scripts/onboard.js --output /var/log/onboard.log --log-level debug --host ', variables('subnetPrivateAddress'), ' --ssl-port ', variables('bigIpMgmtPort'), ' -u admin --password-url file:///config/cloud/passwd --hostname ', concat(variables('instanceName'), '.', resourceGroup().location, '.cloudapp.azure.com'),  ' --ntp pool.ntp.org --db tmm.maxremoteloglength:2048 --module ltm:nominal --module afm:none; f5-rest-node /config/cloud/f5-cloud-libs/scripts/network.js --output /var/log/network.log --host ', variables('subnetPrivateAddress'), ' --port ', variables('bigIpMgmtPort'), ' -u admin --password-url file:///config/cloud/passwd --default-gw ', variables('defaultGw'), ' --vlan external,1.1 --vlan internal,1.2 --self-ip self_2nic,', variables('extSubnetPrivateAdress'), ',external --self-ip self_3nic,', variables('intSubnetPrivateAdress'), ',internal --log-level debug; rm -f /config/cloud/passwd; ./deploy_iapp_http.sh ', variables('commandArgsWeb'))]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {
                    "fileUris": [
                        "[concat('https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/', variables('f5CloudLibsTag'), '/dist/f5-cloud-libs.tar.gz')]",
                        "[concat(variables('gitHubLocation'),  'scripts/deploy_iapp_http.sh')]"
                    ]
                },
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "tags": {
                "application": "[parameters('tagValues').application]",
                "costCenter": "[parameters('tagValues').cost]",
                "environment": "[parameters('tagValues').environment]",
                "group": "[parameters('tagValues').group]",
                "owner": "[parameters('tagValues').owner]"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },

{
    "apiVersion": "[variables('apiVersionLinked')]",
    "name": "linkedTemplateWebServer",
    "type": "Microsoft.Resources/deployments",
    "dependsOn": [
        "[variables('vnetId')]"
    ],
    "properties": {
    "mode": "incremental",
    "templateLink": {
        "uri": "[variables('webtemplatelink')]",
        "contentVersion": "1.0.0.0"
    },
    "parameters": {
        "privateAddressWindows":{"value": "[variables('intPrivateAddressWindows')]"},
        "privateAddressLinux":{"value": "[variables('intPrivateAddressLinux')]"},
        "webSubnetId":{"value": "[variables('intSubnetId')]"},
        "adminUsername":{"value": "[parameters('adminUsername')]"},
        "adminPassword":{"value": "[parameters('adminPassword')]"},
        "dnsLabel":{"value": "[variables('dnsLabel')]"},
        "instanceType":{"value": "[parameters('instanceType')]"},
        "gitHubLocation":{"value": "[variables('gitHubLocation')]"}
    }
    }
}


    ],
    "outputs": {
        "GUI-URL": {
            "type": "string",
            "value": "[concat('https://', variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com', ':', variables('bigIpMgmtPort'))]"
        },
        "SSH-URL": {
            "type": "string",
            "value": "[concat(variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com', ' ',22)]"
        },

"WebServer-URL-Through-F5 ": {
    "type": "string",
    "value": "[concat(variables('httpType'), variables('dnsLabelVip'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
},
"FQDN-Windows-WebServer": {
    "type": "string",
    "value": "[reference('linkedTemplateWebServer').outputs.FQDNWindows.value]"
},
"FQDN-Linux-WebServer": {
    "type": "string",
    "value": "[reference('linkedTemplateWebServer').outputs.FQDNLinux.value]"
}

    }
}