{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "7.2.0.0",
    "parameters": {
        "deployBigiq": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Are you deploying a BIG-IQ?"
            },
            "type": "string"
        },
        "deployGtm": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Are you deploying a GTM?"
            },
            "type": "string"
        },
        "deployRouter": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Are you deploying a router and peered vNet?"
            },
            "type": "string"
        },
        "dnsLabel": {
            "defaultValue": "",
            "metadata": {
                "description": "Unique DNS Name for the Public IP address used to access the Virtual Machine."
            },
            "type": "string"
        },
        "stackType": {
            "type": "string",
            "defaultValue": "existing-stack",
            "metadata": {
                "description": "Type of stack used by the dewdrop test."
            },
            "allowedValues": [
                "existing-stack",
                "production-stack",
                "new-stack"
            ]
        },
        "vnetResourceGroupName": {
            "type": "string",
            "defaultValue": "NOT_SPECIFIED",
            "metadata": {
                "description": "Resource group where to deploy virtual network."
            }
        },
        "bastionSshKey": {
            "metadata": {
                "description": "SSH public key to login to the bastion host"
            },
            "type": "securestring"
        },
        "bigiqPassword": {
            "metadata": {
                "description": "Password to login to the BIG-IQ."
            }, 
            "type": "securestring"
        },
        "gtmPassword": {
            "metadata": {
                "description": "Password to login to the GTM."
            }, 
            "type": "securestring"
        },
        "routerPassword": {
            "metadata": {
                "description": "Password to login to the LTM."
            }, 
            "type": "securestring"
        },       
        "bigiqLicenseKey": {
            "defaultValue": "",
            "metadata": {
                "description": "The license token for the BIG-IQ."
            },
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
        },
        "gtmLicenseKey": {
            "defaultValue": "", 
            "metadata": {
                "description": "The license token for the GTM."
            }, 
            "type": "string"
        },
        "routerLicenseKey": {
            "defaultValue": "", 
            "metadata": {
                "description": "The license token for the LTM."
            }, 
            "type": "string"
        },
        "licensePoolKeys": {
            "defaultValue": "Do_Not_Create",
            "metadata": {
                "description": "Enter a pool name and registration key using the format of name:key. Leave Do_Not_Create if you do not want to create a licensing pool on BIG-IQ at this time."
            },
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
        }
    },
    "variables": {
        "deploymentApiVersion": "2017-05-10",
        "resourceGroupName": "[resourceGroup().name]",
        "vnetResourceGroupName": "[if(equals(parameters('vnetResourceGroupName'), 'NOT_SPECIFIED'), variables('resourceGroupName'), parameters('vnetResourceGroupName'))]",
        "dnsLabelBigiq": "[concat(parameters('dnsLabel'), '-bigiq')]",
        "dnsLabelRouter": "[concat(parameters('dnsLabel'), '-router')]",
        "dnsLabelGtm": "[concat(parameters('dnsLabel'), '-dns')]"    
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "name": "networkTemplate",
            "resourceGroup": "[variables('vnetResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://s3.amazonaws.com/f5-cft/QA/azure-vnet-bastion.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "stackType":{ "value": "[parameters('stackType')]" },
                    "adminKey":{ "value": "[parameters('bastionSshKey')]" },
                    "routeTableName":{ "value":  "[concat(parameters('dnsLabel'), '-rt')]"}
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[equals(parameters('deployBigiq'), 'Yes')]",           
            "dependsOn": [
                "networkTemplate"
            ],
            "name": "bigiqTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://s3.amazonaws.com/f5-cft/QA/azure-bigiq-standalone-2.0.json",
                    "contentVersion": "5.3.0.0"
                },
                "parameters": {       
                    "adminPassword":{ "value": "[parameters('bigiqPassword')]" },   
                    "dnsLabel":{ "value": "[variables('dnsLabelBigiq')]" },
                    "bigiqLicenseKey1":{ "value": "[parameters('bigiqLicenseKey')]" },
                    "licensePoolKeys":{ "value": "[parameters('licensePoolKeys')]" },   
                    "vnetResourceGroupName":{ "value": "[variables('resourceGroupName')]" }                               
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[equals(parameters('deployGtm'), 'Yes')]",           
            "dependsOn": [
                "networkTemplate"
            ],
            "name": "gtmTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://s3.amazonaws.com/f5-cft/QA/azure-gtm.json",
                    "contentVersion": "6.0.4.0"
                },
                "parameters": {  
                    "adminPasswordOrKey":{ "value": "[parameters('gtmPassword')]" },   
                    "dnsLabel":{ "value": "[variables('dnsLabelGtm')]" },
                    "licenseKey1":{ "value": "[parameters('gtmLicenseKey')]" },   
                    "vnetResourceGroupName":{ "value": "[variables('resourceGroupName')]" }  
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[equals(parameters('deployRouter'), 'Yes')]",
            "dependsOn": [
                "networkTemplate"
            ],
            "name": "routerTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://s3.amazonaws.com/f5-cft/QA/azure-vnet-peer.json",
                    "contentVersion": "7.2.0.0"
                },
                "parameters": {
                    "adminPasswordOrKey":{ "value": "[parameters('routerPassword')]" },   
                    "dnsLabel":{ "value": "[variables('dnsLabelRouter')]" },   
                    "licenseKey1":{ "value": "[parameters('routerLicenseKey')]" },   
                    "vnetResourceGroupName":{ "value": "[variables('resourceGroupName')]" }                
                }
            }
        }
    ],
    "outputs": {
        "bastionIp": {
            "condition": "[equals(parameters('stackType'),'production-stack')]",
            "type": "string",
            "value": "[reference('networkTemplate').outputs.bastionIp.value]"
        },
        "gtmGui": {
            "condition": "[equals(parameters('deployGtm'), 'Yes')]",
            "type": "string",
            "value": "[reference('gtmTemplate').outputs['GUI-URL'].value]"
        },
        "gtmSsh": {
            "condition": "[equals(parameters('deployGtm'), 'Yes')]",
            "type": "string",
            "value": "[reference('gtmTemplate').outputs['SSH-URL'].value]"
        },
        "gtmIp": {
            "condition": "[equals(parameters('deployGtm'), 'Yes')]",
            "type": "string",
            "value": "[reference('gtmTemplate').outputs.gtmIp.value]"
        },
        "bigiqGui": {
            "condition": "[equals(parameters('deployBigiq'), 'Yes')]",
            "type": "string",
            "value": "[reference('bigiqTemplate').outputs['GUI-URL'].value]"
        },
        "bigiqSsh": {
            "condition": "[equals(parameters('deployBigiq'), 'Yes')]",
            "type": "string",
            "value": "[reference('bigiqTemplate').outputs['SSH-URL'].value]"
        },
        "bigiqIp": {
            "condition": "[equals(parameters('deployBigiq'), 'Yes')]",
            "type": "string",
            "value": "[reference('bigiqTemplate').outputs.bigiqIp.value]"
        }
    }
}